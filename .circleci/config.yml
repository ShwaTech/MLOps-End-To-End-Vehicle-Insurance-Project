version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@9.6.0
  aws-cli: circleci/aws-cli@5.4.1

workflows:
  build_and_deploy:
    jobs:
    - build_and_push_image
    - deploy_to_ec2:
        requires:
        - build_and_push_image

jobs:
  build_and_push_image:
    machine:
      image: ubuntu-2204:current
    steps:
    - checkout
    - aws-ecr/build_and_push_image:
        auth:
        - aws-cli/setup:
            aws_access_key_id: $AWS_ACCESS_KEY_ID
            aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
            region: $AWS_DEFAULT_REGION
        repo: $ECR_REPO
        tag: latest
        region: $AWS_DEFAULT_REGION
        account_id: $AWS_ACCOUNT_ID

  deploy_to_ec2:
    machine:
      image: ubuntu-2204:current
    steps:
    - add_ssh_keys:
        fingerprints:
        - "53:9b:74:55:28:b3:32:d7:3e:3e:9b:e2:da:40:53:15"
        - "SHA256:CsZ4WbxCDDVwmm0UWdudEn/h24M0WiuWSw3a9vvKSKI"
    - run:
        name: Deploy on EC2
        command: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP \<< 'EOF'
            # Login to ECR
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | \
              docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"

            # Pull the latest image
            docker pull "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:latest"

            # Stop & remove old container (if exists)
            docker stop app || true && docker rm app || true

            # Run new container
            docker run -d \
              --name app \
              -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
              -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
              -e AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION" \
              -e MONGODB_URL="$MONGODB_URL" \
              -p 5000:5000 \
              "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:latest"
          EOF
